{"version":3,"sources":["app/models/pagination.ts","app/models/activity.ts","app/models/modalStore.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/commentStore.ts","app/stores/commonStore.ts","app/stores/profileStore.ts","app/stores/store.ts","app/stores/userStore.ts","app/api/agent.ts","app/common/form/MyTextInput.tsx","app/features/users/LoginForm.tsx","app/features/errors/ValidationErrors.tsx","app/features/users/RegisterForm.tsx","app/features/home/HomePage.tsx","app/layout/NavBar.tsx","app/features/profiles/FollowButton.tsx","app/features/profiles/ProfileCard.tsx","app/features/activities/dashboard/ActivityListItemAttendee.tsx","app/features/activities/dashboard/ActivityListItem.tsx","app/features/activities/dashboard/ActivityList.tsx","app/layout/LoadingComponent.tsx","app/features/activities/dashboard/ActivityFilter.tsx","app/features/activities/dashboard/ActivityListItemPlaceholder.tsx","app/features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyTextArea.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","app/features/activities/form/ActivityForm.tsx","app/features/activities/details/ActivityDetailedChat.tsx","app/features/activities/details/ActivityDetailedHeader.tsx","app/features/activities/details/ActivityDetailedInfo.tsx","app/features/activities/details/ActivityDetailedSidebar.tsx","app/features/activities/details/ActivityDetails.tsx","app/features/errors/TestErrors.tsx","app/features/errors/NotFound.tsx","app/features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/features/profiles/ProfileEditForm.tsx","app/features/profiles/ProfileAbout.tsx","app/features/profiles/ProfileFollowing.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","app/features/profiles/ProfilePhotos.tsx","app/features/profiles/ProfileContent.tsx","app/features/profiles/ProfileHeader.tsx","app/features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/utils/hooks.ts","app/features/users/RegisterSuccess.tsx","app/features/users/ConfirmEmail.tsx","app/layout/App.tsx","app/layout/SrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","Activity","init","Object","assign","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","ModalStore","modal","open","body","openModal","content","closeModal","makeAutoObservable","Profile","user","username","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","predicate","set","setPagingParams","setPredicate","value","resetPredicate","forEach","key","delete","loadActivities","agent","Activities","list","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","details","runInAction","store","userStore","isGoing","attendees","some","a","isHost","hostUsername","host","find","x","Date","get","state","createActivity","attendee","create","newActivity","updateActivity","update","updatedActivity","deleteActivity","updateAttendance","attend","filter","push","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSeletedActivity","reaction","keys","clear","params","URLSearchParams","append","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","CommentStore","comments","hubConnection","createHubConnection","activityId","activityStore","HubConnectionBuilder","withUrl","process","accessTokenFactory","token","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","error","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","CommonStore","window","localStorage","getItem","appLoaded","setServerError","setToken","setAppLoaded","setItem","removeItem","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","Profiles","uploadPhoto","file","response","photo","photos","isMain","setImage","url","setMainPhoto","p","deletePhoto","updateProfile","setDisplayName","updateFollowing","followingCount","loadFollowings","listFollowings","loadUserActivities","listActivities","commonStore","UserStore","modalStore","profileStore","commentStore","StoreContext","createContext","useStore","useContext","facebookAccessToken","facebookLoading","refreshTokenTimeout","login","creds","Account","startRefreshTokenTimer","history","logout","getUser","current","register","email","name","getFacebookLoginStatus","FB","getLoginStatus","status","authResponse","accessToken","facebookLogin","apiLogin","then","scope","refreshToken","stopRefreshTokenTimer","jwtToken","JSON","parse","Buffer","split","timeout","exp","now","setTimeout","clearTimeout","axios","defaults","baseURL","interceptors","request","use","config","headers","Authorization","method","errors","hasOwnProperty","modalStateErrors","flat","toast","startsWith","Promise","reject","responseBody","requests","post","put","verifyEmail","resendEmailConfirm","formData","FormData","MyTextInput","props","useField","field","meta","FormField","touched","label","Label","basic","color","observer","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","Form","className","autoComplete","Header","as","textAlign","placeholder","type","render","style","marginBottom","Button","positive","fluid","ValidationErrors","Message","List","map","err","i","Item","validationSchema","Yup","required","isValid","dirty","disabled","Segment","inverted","vertical","Container","text","isLogggedIn","Link","to","size","onClick","Divider","horizontal","Menu","fixed","NavLink","exact","header","position","Image","src","avatar","spaced","Dropdown","pointing","icon","Reveal","animated","Content","visible","width","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWith","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Group","attached","secondary","clearing","floated","groupedActivities","group","sub","LoadingComponent","Dimmer","active","Loader","marginTop","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","ActivityFilter","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","MyTextArea","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","ProfileFollowing","menu","menuPosition","onTabChange","activeIndex","Statistic","PrivateRoute","Component","component","rest","useQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","createRoot","document","getElementById","Provider"],"mappings":"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","file":"static/js/main.cedbf731.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber = 1;\n  pageSize = 2;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername?: string;\n  isCancelled?: boolean;\n  isGoing?: boolean;\n  isHost?: boolean;\n  host?: Profile;\n  attendees: Profile[]\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}","import { makeAutoObservable } from \"mobx\"\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null\n  }\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  }\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  }\n}","import { User } from \"./user\";\n\nexport interface Profile {\n    username: string;\n    displayName: string;\n    image?: string;\n    bio?: string;\n    followersCount: number;\n    followingCount: number;\n    following: boolean;\n    photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n    constructor(user: User) {\n        this.username = user.username;\n        this.displayName = user.displayName;\n        this.image = user.image;\n    }\n}\n\nexport interface Photo {\n    id: string;\n    url: string;\n    isMain: boolean;\n}\n\nexport interface UserActivity {\n    id: string;\n    title: string;\n    category: string;\n    date: Date;\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport agent from \"../api/agent\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set('all', true);\n\n  constructor() {\n    makeAutoObservable(this)\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    )\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== 'startDate') this.predicate.delete(key);\n      })\n    }\n    switch (predicate) {\n      case 'all':\n        resetPredicate();\n        this.predicate.set('all', true);\n        break;\n      case 'isGoing':\n        resetPredicate();\n        this.predicate.set('isGoing', true);\n        break;\n      case 'isHost':\n        resetPredicate();\n        this.predicate.set('isHost', true);\n        break;\n      case 'startDate':\n        this.predicate.delete('startDate');\n        this.predicate.set('startDate', value);\n    }\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\n    params.append('pageSize', this.pagingParams.pageNumber.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === 'startDate') {\n        params.append(key, (value as Date).toISOString())\n      } else {\n        params.append(key, value);\n      }\n    })\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, 'dd MMM yyyy h:mm aa');\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as {[key: string]: Activity[]})\n    )\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n        const result = await agent.Activities.list(this.axiosParams);\n        result.data.forEach(activity => {\n            this.setActivity(activity);\n        })\n        this.setPagination(result.pagination);\n        this.setLoadingInitial(false);\n    } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n    }\n}\n\nsetPagination = (pagination: Pagination) => {\n  this.pagination = pagination;\n}\n\nloadActivity = async (id: string) => {\n  let activity = this.getActivity(id);\n  if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n  } else {\n      this.loadingInitial = true;\n      try {\n          activity = await agent.Activities.details(id);\n          this.setActivity(activity);\n          runInAction(() => {\n              this.selectedActivity = activity;\n          })\n          this.setLoadingInitial(false);\n          return activity;\n      } catch (error) {\n          console.log(error);\n          this.setLoadingInitial(false);\n      }\n  }\n}\n\nprivate setActivity = (activity: Activity) => {\n  const user = store.userStore.user;\n  if (user) {\n    activity.isGoing = activity.attendees?.some(\n      a => a.username === user.username\n    )\n    activity.isHost = activity.hostUsername === user.username;\n    activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\n  }\n  activity.date = new Date(activity.date!);\n  this.activityRegistry.set(activity.id, activity);\n}\n\nprivate getActivity = (id: string) => {\n  return this.activityRegistry.get(id);\n}\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  }\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {...this.getActivity(activity.id), ...activity}\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      })\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      })\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      })\n    }\n  }\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n          this.selectedActivity.attendees?.filter(a => a.username !== user?.username);\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      })\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => this.loading = false);\n    }\n  }\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach(activity => {\n        activity.attendees.forEach(attendee => {\n            if (attendee.username === username) {\n                attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n                attendee.following = !attendee.following;\n            }\n        })\n    })\n}\n\n  clearSeletedActivity = () => {\n    this.selectedActivity = undefined;\n  }\n}\n","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n      \n      this.hubConnection.start().catch(error => console.log('Error establishing the connection: ', error))\n\n    this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\n      runInAction(() => {\n        comments.forEach(comment => {\n          comment.createdAt = new Date(comment.createdAt + 'Z');\n        })\n        this.comments = comments\n      });\n    })\n\n    this.hubConnection.on('ReceiveComment', (comment: ChatComment) => {\n      runInAction(() => {\n        comment.createdAt = new Date(comment.createdAt);\n        this.comments.unshift(comment)\n      });\n    })\n    }\n  }\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch(error => console.log('Error stopping connection: ', error));\n  }\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  }\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke('SendComment', values);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/ServerError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem('jwt');\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token)\n        } else {\n          window.localStorage.removeItem('jwt')\n        }\n      }\n    )\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  }\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  }\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  }\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n    profile: Profile | null = null;\n    loadingProfile = false;\n    uploading = false;\n    loading = false;\n    followings: Profile[] = [];\n    loadingFollowings = false;\n    activeTab = 0;\n    userActivities: UserActivity[] = [];\n    loadingActivities = false;\n\n    constructor() {\n        makeAutoObservable(this);\n\n        reaction(\n            () => this.activeTab,\n            activeTab => {\n                if (activeTab === 3 || activeTab === 4) {\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\n                    this.loadFollowings(predicate);\n                } else {\n                    this.followings = [];\n                }\n            }\n        )\n    }\n\n    setActiveTab = (activeTab: any) => {\n        this.activeTab = activeTab;\n    }\n\n    get isCurrentUser() {\n        if (store.userStore.user && this.profile) {\n            return store.userStore.user.username === this.profile.username;\n        }\n        return false;\n    }\n\n    loadProfile = async (username: string) => {\n        this.loadingProfile = true;\n        try {\n            const profile = await agent.Profiles.get(username);\n            runInAction(() => {\n                this.profile = profile;\n                this.loadingProfile = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loadingProfile = false);\n        }\n    }\n\n    uploadPhoto = async (file: Blob) => {\n        this.uploading = true;\n        try {\n            const response = await agent.Profiles.uploadPhoto(file);\n            const photo = response.data;\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos?.push(photo);\n                    if (photo.isMain && store.userStore.user) {\n                        store.userStore.setImage(photo.url);\n                        this.profile.image = photo.url;\n                    }\n                }\n                this.uploading = false;\n            })\n        } catch (error) {   \n            console.log(error);\n            runInAction(() => this.uploading = false);\n        }\n    }\n\n    setMainPhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.setMainPhoto(photo.id);\n            store.userStore.setImage(photo.url);\n            runInAction(() => {\n                if (this.profile && this.profile.photos) {\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\n                    this.profile.image = photo.url;\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    deletePhoto = async (photo: Photo) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.deletePhoto(photo.id);\n            runInAction(() => {\n                if (this.profile) {\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\n                    this.loading = false;\n                }\n            })\n        } catch (error) {\n            runInAction(() => this.loading = false);\n            console.log(error);\n        }\n    }\n\n    updateProfile = async (profile: Partial<Profile>) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateProfile(profile);\n            runInAction(() => {\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n                    store.userStore.setDisplayName(profile.displayName);\n                }\n                this.profile = {...this.profile, ...profile as Profile};\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n    updateFollowing = async (username: string, following: boolean) => {\n        this.loading = true;\n        try {\n            await agent.Profiles.updateFollowing(username);\n            store.activityStore.updateAttendeeFollowing(username);\n            runInAction(() => {\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\n                    this.profile.following = !this.profile.following;\n                }\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\n                }\n                this.followings.forEach(profile => {\n                    if (profile.username === username) {\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\n                        profile.following = !profile.following;\n                    }\n                })\n                this.loading = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => this.loading = false);\n        }\n    }\n\n\n    loadFollowings = async (predicate: string) => {\n        this.loadingFollowings = true;\n        try {\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n            runInAction(() => {\n                this.followings = followings;\n                this.loadingFollowings = false;\n            })\n        } catch (error) {\n            runInAction(() => this.loadingFollowings = false);\n        }\n    }\n\n    loadUserActivities = async (username: string, predicate?: string) => {\n        this.loadingActivities = true;\n        try {\n            const activities = await agent.Profiles.listActivities(username, predicate!);\n            runInAction(() => {\n                this.userActivities = activities;\n                this.loadingActivities = false;\n            })\n        } catch (error) {\n            console.log(error);\n            runInAction(() => {\n                this.loadingActivities = false;\n            })\n        }\n    }\n}","import { createContext, useContext } from \"react\";\nimport ModalStore from \"../models/modalStore\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore()\n}\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}","import { makeAutoObservable, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\nimport { history } from '../..';\n\nexport default class UserStore {\n  user: User | null = null;\n  facebookAccessToken: string | null = null;\n  facebookLoading = false;\n  refreshTokenTimeout: any;\n\n  constructor() {\n    makeAutoObservable(this)\n  }\n\n  get isLogggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n      runInAction(() => this.user = user);\n      history.push('/activities');\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem('jwt');\n    this.user = null;\n    history.push('/');\n  }\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      store.commonStore.setToken(user.token);\n      runInAction(() => this.user = user);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  register = async (creds: UserFormValues) => {\n    try {\n        await agent.Account.register(creds);\n        history.push(`/account/registerSuccess?email=${creds.email}`);\n        store.modalStore.closeModal();\n    } catch (error) {\n        throw error;\n    }\n}\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n}\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  }\n\n  getFacebookLoginStatus = async () => {\n    window.FB.getLoginStatus(response => {\n      if (response.status === 'connected') {\n        this.facebookAccessToken = response.authResponse.accessToken;\n      }\n    })\n  }\n\n  facebookLogin = () => {\n    this.facebookLoading = true;\n    const apiLogin = (accessToken: string) => {\n      agent.Account.facebookLogin(accessToken).then(user => {\n        store.commonStore.setToken(user.token);\n        this.startRefreshTokenTimer(user);\n        runInAction(() => {\n          this.user = user;\n          this.facebookLoading = false;\n        })\n        history.push('/activities')\n      }).catch(error => {\n        console.log(error);\n        runInAction(() => this.facebookLoading = false);\n      })\n    }\n    if (this.facebookAccessToken) {\n      apiLogin(this.facebookAccessToken)\n    } else {\n      window.FB.login(response => {\n        apiLogin(response.authResponse.accessToken);\n      }, {scope: 'public_profile,email'})\n    }\n  }\n\n  refreshToken = async () => {\n    this.stopRefreshTokenTimer();\n    try {\n      const user = await agent.Account.refreshToken();\n      runInAction(() => this.user = user);\n      store.commonStore.setToken(user.token);\n      this.startRefreshTokenTimer(user);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  private startRefreshTokenTimer(user: User) {\n    const jwtToken = JSON.parse(Buffer.from(user.token.split('.')[1], 'base64').toString());\n    const expires = new Date(jwtToken.exp * 1000);\n    const timeout = expires.getTime() - Date.now() - (60 * 1000);\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\n  }\n\n  private stopRefreshTokenTimer() {\n    clearTimeout(this.refreshTokenTimeout);\n  }\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\nimport { toast } from 'react-toastify';\nimport { history } from '../..';\nimport { Activity, ActivityFormValues } from '../models/activity';\nimport { PaginatedResult } from '../models/pagination';\nimport { Photo, Profile, UserActivity } from '../models/profile';\nimport { User, UserFormValues } from '../models/user';\nimport { store } from '../stores/store';\n\nconst sleep = (delay: number) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use(config => {\n    const token = store.commonStore.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\n    const pagination = response.headers['pagination'];\n    if (pagination) {\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n        return response as AxiosResponse<PaginatedResult<any>>\n    }\n    return response;\n}, (error: AxiosError) => {\n    const { data, status, config, headers } = error.response!;\n    switch (status) {\n        case 400:\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\n                history.push('/not-found');\n            }\n            if (data.errors) {\n                const modalStateErrors = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modalStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modalStateErrors.flat();\n            } else {\n                toast.error(data);\n            }\n            break;\n        case 401:\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\n                store.userStore.logout();\n                toast.error('Session expired - please login again');\n            }\n            break;\n        case 404:\n            history.push('/not-found');\n            break;\n        case 500:\n            store.commonStore.setServerError(data);\n            history.push('/server-error');\n            break;\n    }\n    return Promise.reject(error);\n})\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n    delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n}\n\nconst Activities = {\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\n        .then(responseBody),    \n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\n    delete: (id: string) => requests.delete<void>(`/activities/${id}`),\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\n}\n\nconst Account = {\n    current: () => requests.get<User>('/account'),\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\n    facebookLogin: (accessToken: string) => requests.post<User>(`/account/facebookLogin?accessToken=${accessToken}`, {}),\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\n    verifyEmail: (token: string, email: string) =>\n        requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\n    resendEmailConfirm: (email: string) =>\n        requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\n}\n\nconst Profiles = {\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n    uploadPhoto: (file: Blob) => {\n        let formData = new FormData();\n        formData.append('File', file);\n        return axios.post<Photo>('photos', formData, {\n            headers: {'Content-type': 'multipart/form-data'}\n        })\n    },\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n    deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n    updateProfile: (profile: Partial<Profile>) => requests.put(`profiles`, profile),\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n    listFollowings: (username: string, predicate: string) => \n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n    listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\n}\n\nconst agent = {\n    Activities,\n    Account,\n    Profiles\n}\n\nexport default agent;","import { useField } from \"formik\";\nimport React from \"react\";\nimport { FormField, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <FormField error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">{meta.error}</Label>\n      ) : null}\n    </FormField>\n  )\n}","import { ErrorMessage, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Form, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../common/form/MyTextInput\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function LoginForm() {\n  const {userStore} = useStore();\n  return (\n    <Formik\n    initialValues={{email: '', password: '', error: null}}\n    onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => setErrors({error: error.response.data}))}\n    >\n      {({handleSubmit, isSubmitting, errors}) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Login' color='teal' textAlign=\"center\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type='password' />\n          <ErrorMessage\n          name=\"error\" render={() => <Label style={{marginBottom: 10}} basic color='red' content={errors.error} />}\n          />\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import React from 'react';\nimport { Message } from 'semantic-ui-react';\n\ninterface Props {\n    errors: any;\n}\n\nexport default function ValidationErrors({errors}: Props) {\n    return (\n        <Message error>\n            {errors && (\n                <Message.List>\n                    {errors.map((err: any, i: any) => (\n                        <Message.Item key={i}>{err}</Message.Item>\n                    ))}\n                </Message.List>\n            )}\n        </Message>\n    )\n}","import { ErrorMessage, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Form, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../common/form/MyTextInput\";\nimport { useStore } from \"../../stores/store\";\nimport * as Yup from 'yup';\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const {userStore} = useStore();\n  return (\n    <Formik\n    initialValues={{displayName: '', username: '', email: '', password: '', error: null}}\n    onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \n      setErrors({error}))}\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required()\n      })}\n    >\n      {({handleSubmit, isSubmitting, errors, isValid, dirty}) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete='off'>\n          <Header as='h2' content='Sign up' color='teal' textAlign=\"center\" />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type='password' />\n          <ErrorMessage\n            name=\"error\" render={() => \n            <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n          disabled={!isValid || !dirty || isSubmitting}\n          loading={isSubmitting} \n          positive content='Register' type='submit' fluid />\n        </Form>\n      )}\n    </Formik>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Header, Segment, Button, Divider } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\nimport LoginForm from '../users/LoginForm';\nimport RegisterForm from '../users/RegisterForm';\n\nexport default observer(function HomePage() {\n    const {userStore, modalStore} = useStore();\n    return (\n        <Segment inverted textAlign='center' vertical className='masthead'>\n            <Container text>\n                <Header as='h1' inverted>\n                    Home Page\n                </Header>\n                {userStore.isLogggedIn ? (\n                    <>\n                    <Header as='h2' inverted content='Welcome' />\n                    <Button as={Link} to='/activities' size='huge' inverted>\n                        See Activities\n                    </Button>\n                    </>\n                ) : (\n                    <>\n                        <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\n                            Login\n                        </Button>\n                        <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\n                            Register\n                        </Button>\n                        <Divider horizontal inverted>Or</Divider>\n                        <Button\n                            loading={userStore.facebookLoading}\n                            size='huge'\n                            inverted\n                            color='facebook'\n                            content='Login with Facebook'\n                            onClick={userStore.facebookLogin}\n                        />\n                    </>\n                )}\n            </Container>\n        </Segment>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {userStore: {user, logout, isLogggedIn}} = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to='/' exact header>\n          Home\n        </Menu.Item>\n        {isLogggedIn &&\n        <>\n          <Menu.Item as={NavLink} to='/activities' name=\"Activivities\" />\n          <Menu.Item>\n            <Button as={NavLink} to='/createActivity' positive content=\"Create Activity\" />\n          </Menu.Item>\n          <Menu.Item position=\"right\">\n            <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\n            <Dropdown pointing='top left' text={user?.displayName}>\n              <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text=\"My profile\" icon='user' />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\n              </Dropdown.Menu>\n            </Dropdown>\n          </Menu.Item>\n        </>}\n      </Container>\n    </Menu>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent } from 'react';\nimport { Reveal, Button } from 'semantic-ui-react';\nimport { Profile } from '../../models/profile';\nimport { useStore } from '../../stores/store';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n    const {profileStore, userStore} = useStore();\n    const {updateFollowing, loading} = profileStore;\n\n    if (userStore.user?.username === profile.username) return null;\n\n    function handleFollow(e: SyntheticEvent, username: string) {\n        e.preventDefault();\n        profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n    }\n\n    return (\n        <Reveal animated='move'>\n            <Reveal.Content visible style={{ width: '100%' }}>\n                <Button \n                    fluid \n                    color='teal' \n                    content={profile.following ? 'Following' : 'Not following'} />\n            </Reveal.Content>\n            <Reveal.Content hidden style={{ width: '100%' }}>\n                <Button\n                    fluid\n                    basic\n                    color={profile.following ? 'red' : 'green'}\n                    content={profile.following ? 'Unfollow' : 'Follow'}\n                    loading={loading}\n                    onClick={(e) => handleFollow(e, profile.username)}\n                />\n            </Reveal.Content>\n        </Reveal>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({profile}: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\n    }\n  }\n  return (\n    <Card>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image, Popup } from 'semantic-ui-react';\nimport { Profile } from '../../../models/profile';\nimport ProfileCard from '../../profiles/ProfileCard';\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props) {\n  const styles = {\n    borderColor: 'orange',\n    borderWith: 2\n  }\n  return (\n    <List horizontal>\n      {attendees.map(attendee => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image \n              size='mini' \n              circular \n              src={attendee.image || '/assets/user.png'} \n              bordered\n              style={attendee.following ? styles : null}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  )\n})","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\nimport {format} from 'date-fns';\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\nimport { Activity } from '../../../models/activity';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n\n    return (\n        <Segment.Group>\n            <Segment>\n                {activity.isCancelled &&\n                    <Label attached='top' color='red' content='Cancelled' style={{textAlign: 'center'}} />\n                }\n                <Item.Group>\n                    <Item>\n                        <Item.Image style={{marginBottom: 3}} size='tiny' circular src={activity.host?.image || '/assets/user.png'} />\n                        <Item.Content>\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                                {activity.title}\n                            </Item.Header>\n                            <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link>\n                            </Item.Description>\n                            {activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='orange'>\n                                        You are hosting this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                            {activity.isGoing && !activity.isHost && (\n                                <Item.Description>\n                                    <Label basic color='green'>\n                                        You are going to this activity\n                                    </Label>\n                                </Item.Description>\n                            )}\n                        </Item.Content>\n                    </Item>\n                </Item.Group>\n            </Segment>\n            <Segment>\n                <span>\n                    <Icon name='clock' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                    <Icon name='marker' /> {activity.venue}\n                </span>\n            </Segment>\n            <Segment secondary>\n                <ActivityListItemAttendee attendees={activity.attendees!} />\n            </Segment>\n            <Segment clearing>\n                <span>{activity.description}</span>\n                <Button \n                    as={Link}\n                    to={`/activities/${activity.id}`}\n                    color='teal'\n                    floated='right'\n                    content='View'\n                />\n            </Segment>\n        </Segment.Group>\n    )\n}","import { Fragment } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const {activityStore} = useStore();\n  const {groupedActivities} = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color='teal'>\n            {group}\n          </Header>\n            {activities.map(activity => (\n              <ActivityListItem key={activity.id} activity={activity} />\n            ))}\n        </Fragment>\n      ))}\n    </>\n  )\n})","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport { Header, Menu } from 'semantic-ui-react';\nimport { useStore } from '../../../stores/store';\n\nexport default observer(function ActivityFilters() {\n    const {activityStore: {predicate, setPredicate}} = useStore();\n    return (\n        <>\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\n                <Header icon='filter' attached color='teal' content='Filters' />\n                <Menu.Item\n                content='All Activites'\n                active={predicate.has('all')}\n                onClick={() => setPredicate('all', 'true')}\n                />\n                <Menu.Item\n                content=\"I'm going\"\n                active={predicate.has('isGoing')}\n                onClick={() => setPredicate('isGoing', 'true')}\n                />\n                <Menu.Item\n                content=\"I'm hosting\"\n                active={predicate.has('isHost')}\n                onClick={() => setPredicate('isHost', 'true')}\n                />\n            </Menu>\n            <Header />\n            <Calendar\n            onChange={(date: any) => setPredicate('startDate', date as Date)}\n            value={predicate.get('startDate') || new Date()}\n            />\n        </>\n    )\n})","import React, { Fragment } from 'react';\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\n\nexport default function ActivityListItemPlaceholder() {\n    return (\n        <Fragment>\n            <Placeholder fluid style={{ marginTop: 25 }}>\n                <Segment.Group>\n                    <Segment style={{ minHeight: 110 }}>\n                        <Placeholder>\n                            <Placeholder.Header image>\n                                <Placeholder.Line />\n                                <Placeholder.Line />\n                            </Placeholder.Header>\n                            <Placeholder.Paragraph>\n                                <Placeholder.Line />\n                            </Placeholder.Paragraph>\n                        </Placeholder>\n                    </Segment>\n                    <Segment>\n                        <Placeholder>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </Segment>\n                    <Segment secondary style={{ minHeight: 70 }} />\n                    <Segment clearing>\n                        <Button disabled color='blue' floated='right' content='View' />\n                    </Segment>\n                </Segment.Group>\n            </Placeholder>\n        </Fragment>\n    );\n};","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../stores/store\";\nimport ActivityList from \"./ActivityList\";\nimport LoadingComponent from \"../../../layout/LoadingComponent\";\nimport ActivityFilters from \"./ActivityFilter\";\nimport { PagingParams } from \"../../../models/pagination\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const {activityStore} = useStore();\n  const {loadActivities, activityRegistry, setPagingParams, pagination} = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1))\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities])\n\n  if (activityStore.loadingInitial && !loadingNext) return <LoadingComponent content=\"Loading activities...\" />\n  \n  return (\n    <Grid>\n      <Grid.Column width='10'>\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n          <ActivityListItemPlaceholder />\n          <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n          pageStart={0}\n          loadMore={handleGetNext}\n          hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n          initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width='6'>\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  )\n})","import { useField } from \"formik\";\nimport React from \"react\";\nimport { FormField, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <FormField error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n      clearable\n      options={props.options}\n      value={field.value || null}\n      onChange={(e, d) => helpers.setValue(d.value)}\n      onBlur={() => helpers.setTouched(true)}\n      placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">{meta.error}</Label>\n      ) : null}\n    </FormField>\n  )\n}","import { useField } from \"formik\";\nimport React from \"react\";\nimport { FormField, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <FormField error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">{meta.error}</Label>\n      ) : null}\n    </FormField>\n  )\n}","export const categoryOptions = [\n  {text: 'Drinks', value: 'drinks'},\n  {text: 'Culture', value: 'culture'},\n  {text: 'Film', value: 'film'},\n  {text: 'Food', value: 'food'},\n  {text: 'Music', value: 'music'},\n  {text: 'Travel', value: 'travel'}\n]","import { useField } from \"formik\";\nimport React from \"react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\nimport { FormField, Label } from \"semantic-ui-react\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <FormField error={meta.touched && !!meta.error}>\n      <DatePicker\n      {...field}\n      {...props}\n      selected={(field.value && new Date(field.value)) || null}\n      onChange={value => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">{meta.error}</Label>\n      ) : null}\n    </FormField>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../layout/LoadingComponent\";\nimport { useStore } from \"../../../stores/store\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from 'yup';\nimport MyTextInput from \"../../../common/form/MyTextInput\";\nimport MySelectInput from \"../../../common/form/MySelectInput\";\nimport MyTextArea from \"../../../common/form/MyTextArea\";\nimport { categoryOptions } from \"../../../common/options/categoryOptions\";\nimport MyDateInput from \"../../../common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../models/activity\";\nimport {v4 as uuid} from 'uuid';\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required('The activity title is required'),\n    description: Yup.string().required('The activity description is required'),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required()\n  })\n\n  useEffect(() => {\n    if (id) loadActivity(id).then(activity => setActivity(new ActivityFormValues(activity)))\n  }, [id, loadActivity]);\n\nfunction handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n        let newActivity = {\n            ...activity,\n            id: uuid() \n        };\n        createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`))\n    } else {\n        updateActivity(activity).then(() => history.push(`/activities/${activity.id}`))\n    }\n}\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />\n\n  return (\n    <Segment clearing>\n      <Header content='Activity Details' sub color='teal' />\n      <Formik\n      validationSchema={validationSchema}\n      enableReinitialize \n      initialValues={activity} \n      onSubmit={values => handleFormSubmit(values)}>\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n\n            <MyTextArea rows={3} placeholder='Description' name='description' />\n            <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\n            <MyDateInput\n            placeholderText=\"Date\"\n            name=\"date\"\n            showTimeSelect\n            timeCaption=\"time\"\n            dateFormat='MMMM d, yyyy h:mm aa'\n            />\n            <MyTextInput placeholder='City' name='city' />\n            <MyTextInput placeholder='Venue' name='venue' />\n            <Button\n            disabled={isSubmitting || !dirty || !isValid}\n            loading={isSubmitting} \n            floated=\"right\" \n            positive \n            type=\"submit\" \n            content='Submit'\n            />\n            <Button as={Link} to='/activities' floated=\"right\" type=\"button\" content='Cancel' />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  )\n})","import { Formik, Form, Field, FieldProps } from 'formik'\nimport { observer } from 'mobx-react-lite'\nimport React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react'\nimport * as Yup from 'yup';\nimport { formatDistanceToNow } from 'date-fns'\nimport { useStore } from '../../../stores/store'\n\ninterface Props {\n    activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n    const { commentStore } = useStore();\n\n    useEffect(() => {\n        if (activityId) {\n            commentStore.createHubConnection(activityId);\n        }\n        return () => {\n            commentStore.clearComments();\n        }\n    }, [commentStore, activityId]);\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                attached='top'\n                inverted\n                color='teal'\n                style={{ border: 'none' }}\n            >\n                <Header>Chat about this event</Header>\n            </Segment>\n            <Segment attached clearing>\n                <Formik\n                    onSubmit={(values, { resetForm }) =>\n                        commentStore.addComment(values).then(() => resetForm())}\n                    initialValues={{ body: '' }}\n                    validationSchema={Yup.object({\n                        body: Yup.string().required()\n                    })}\n                >\n                    {({ isSubmitting, isValid, handleSubmit }) => (\n                        <Form className='ui form'>\n                            <Field name='body'>\n                                {(props: FieldProps) => (\n                                    <div style={{ position: 'relative' }}>\n                                        <Loader active={isSubmitting} />\n                                        <textarea\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\n                                            rows={2}\n                                            {...props.field}\n                                            onKeyPress={e => {\n                                                if (e.key === 'Enter' && e.shiftKey) {\n                                                    return;\n                                                }\n                                                if (e.key === 'Enter' && !e.shiftKey) {\n                                                    e.preventDefault();\n                                                    isValid && handleSubmit();\n                                                }\n                                            }}\n                                        />\n                                    </div>\n                                )}\n                            </Field>\n                        </Form>\n                    )}\n                </Formik>\n                <Comment.Group>\n                    {commentStore.comments.map(comment => (\n                        <Comment key={comment.id}>\n                            <Comment.Avatar src={comment.image || '/assets/user.png'} />\n                            <Comment.Content>\n                                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                                    {comment.displayName}\n                                </Comment.Author>\n                                <Comment.Metadata>\n                                    <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                                </Comment.Metadata>\n                                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\n                            </Comment.Content>\n                        </Comment>\n                    ))}\n                </Comment.Group>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Link } from 'react-router-dom';\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\nimport { Activity } from '../../../models/activity';\nimport { format } from 'date-fns'\nimport { useStore } from '../../../stores/store';\n\n\nconst activityImageStyle = {\n    filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n    position: 'absolute',\n    bottom: '5%',\n    left: '5%',\n    width: '100%',\n    height: 'auto',\n    color: 'white'\n};\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\n    const {activityStore: {updateAttendance, loading, cancelActivityToggle}} = useStore();\n    return (\n        <Segment.Group>\n            <Segment basic attached='top' style={{padding: '0'}}>\n                {activity.isCancelled &&\n                <Label style={{position: 'obsolute', zIndex: 1000, left: -14, top: 20}} ribbon color='red' content='Cancelled' />}\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\n                <Segment style={activityImageTextStyle} basic>\n                    <Item.Group>\n                        <Item>\n                            <Item.Content>\n                                <Header\n                                    size='huge'\n                                    content={activity.title}\n                                    style={{color: 'white'}}\n                                />\n                                <p>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</p>\n                                <p>\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`} >{activity.host?.displayName}</Link></strong>\n                                </p>\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Segment>\n            </Segment>\n            <Segment clearing attached='bottom'>\n                {activity.isHost ? (\n                    <>\n                    <Button\n                        color={activity.isCancelled ? 'green' : 'red'}\n                        floated='left'\n                        basic\n                        content={activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\n                        onClick={cancelActivityToggle}\n                        loading={loading}\n                    />\n                    <Button as={Link}\n                        disabled={activity.isCancelled}\n                        to={`/manage/${activity.id}`} \n                        color='orange' floated='right'>\n                        Manage Event\n                    </Button>\n                    </>\n                ) : activity.isGoing ? (\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\n                ) : (\n                    <Button loading={loading} onClick={updateAttendance} color='teal'>Join Activity</Button>\n                )}\n            </Segment>\n        </Segment.Group>\n    )\n})","import { format } from 'date-fns';\nimport { observer } from 'mobx-react-lite';\nimport React from 'react'\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\nimport { Activity } from '../../../models/activity';\n\ninterface Props {\n    activity: Activity\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n    return (\n        <Segment.Group>\n            <Segment attached='top'>\n                <Grid>\n                    <Grid.Column width={1}>\n                        <Icon size='large' color='teal' name='info' />\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <p>{activity.description}</p>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='calendar' size='large' color='teal' />\n                    </Grid.Column>\n                    <Grid.Column width={15}>\n                        <span>\n                            {format(activity.date!, 'dd MMM yyyy h:mm aa')}\n                        </span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n            <Segment attached>\n                <Grid verticalAlign='middle'>\n                    <Grid.Column width={1}>\n                        <Icon name='marker' size='large' color='teal' />\n                    </Grid.Column>\n                    <Grid.Column width={11}>\n                        <span>{activity.venue}, {activity.city}</span>\n                    </Grid.Column>\n                </Grid>\n            </Segment>\n        </Segment.Group>\n    )\n})","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../models/activity'\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n    if (!attendees) return null;\n\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person' : 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                            {attendee.username === host?.username &&\n                            <Label\n                                style={{ position: 'absolute' }}\n                                color='orange'\n                                ribbon='right'\n                            >\n                                Host\n                            </Label>}\n                            <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Item.Header as='h3'>\n                                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                                </Item.Header>\n                                {attendee.following &&\n                                <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n                                </Item.Content>\n                        </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../../layout/LoadingComponent';\nimport { useStore } from '../../../stores/store';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nexport default observer(function ActivityDetails() {\n    const {activityStore} = useStore();\n    const {selectedActivity: activity, loadActivity, loadingInitial, clearSeletedActivity} = activityStore;\n    const {id} = useParams<{id: string}>();\n\n    useEffect(() => {\n        if (id) loadActivity(id);\n        return () => clearSeletedActivity();\n    }, [id, loadActivity, clearSeletedActivity]);\n\n    if (loadingInitial || !activity) return <LoadingComponent />;\n\n    return (\n        <Grid>\n            <Grid.Column width={10}>\n                <ActivityDetailedHeader activity={activity} />\n                <ActivityDetailedInfo activity={activity} />\n                <ActivityDetailedChat activityId={activity.id} />\n            </Grid.Column>\n            <Grid.Column width={6}>\n                <ActivityDetailedSidebar activity={activity} />\n            </Grid.Column>\n        </Grid>\n    )\n})","import React, { useState } from 'react';\nimport {Button, Header, Segment} from \"semantic-ui-react\";\nimport axios from 'axios';\nimport ValidationErrors from './ValidationErrors';\n\nexport default function TestErrors() {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const [errors, setErrors] = useState(null);\n\n    function handleNotFound() {\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\n    }\n\n    function handleBadRequest() {\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\n    }\n\n    function handleServerError() {\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\n    }\n\n    function handleUnauthorized() {\n        axios.get(baseUrl + 'buggy/unauthorized').catch(err => console.log(err.response));\n    }\n\n    function handleBadGuid() {\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err));\n    }\n\n    function handleValidationError() {\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\n    }\n\n    return (\n        <>\n            <Header as='h1' content='Test Error component' />\n            <Segment>\n                <Button.Group widths='7'>\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\n                    <Button onClick={handleUnauthorized} content='Unauthorized' basic primary />\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\n                </Button.Group>\n            </Segment>\n            {errors &&\n                <ValidationErrors errors={errors} />\n            }\n        </>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\n\nexport default function NotFound() {\n    return (\n        <Segment placeholder>\n            <Header icon>\n                <Icon name='search' />\n                Oops - we've looked everywhere and could not find this.\n            </Header>\n            <Segment.Inline>\n                <Button as={Link} to='/activities' primary>\n                    Return to activities page\n                </Button>\n            </Segment.Inline>\n        </Segment>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Container, Header, Segment } from 'semantic-ui-react';\nimport { useStore } from '../../stores/store';\n\nexport default observer(function ServerError() {\n    const {commonStore} = useStore();\n    return (\n        <Container>\n            <Header as='h1' content='Server Error' />\n            <Header sub as='h5' color='red' content={commonStore.error?.message} />\n            {commonStore.error?.details &&\n                <Segment>\n                    <Header as='h4' content='Stack trace' color='teal' />\n                    <code style={{marginTop: '10px'}}>{commonStore.error.details}</code>\n                </Segment>\n                \n            }\n        </Container>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const {modalStore} = useStore();\n\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n      <Modal.Content>\n        {modalStore.modal.body}\n      </Modal.Content>\n    </Modal>\n  )\n})","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { Button } from \"semantic-ui-react\";\nimport * as Yup from 'yup';\nimport MyTextArea from \"../../common/form/MyTextArea\";\nimport MyTextInput from \"../../common/form/MyTextInput\";\nimport { useStore } from \"../../stores/store\";\n\ninterface Props {\n    setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\n    const {profileStore: {profile, updateProfile}} = useStore();\n    return (\n        <Formik\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\n            onSubmit={values => {\n                updateProfile(values).then(() => {\n                    setEditMode(false);\n                })\n            }}\n            validationSchema={Yup.object({\n                displayName: Yup.string().required()\n            })}\n        >\n            {({isSubmitting, isValid, dirty}) => (\n                <Form className='ui form'>\n                    <MyTextInput placeholder='Display Name' name='displayName' />\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\n                    <Button \n                        positive\n                        type='submit'\n                        loading={isSubmitting}\n                        content='Update profile'\n                        floated='right'\n                        disabled={!isValid || !dirty}\n                    />\n                </Form>\n            )}\n        </Formik>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport { useState } from \"react\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\nimport ProfileEditForm from \"./ProfileEditForm\";\n\nexport default observer(function ProfileAbout() {\n  const {profileStore} = useStore();\n  const {isCurrentUser, profile} = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width='16'>\n          <Header floated=\"left\" icon='user' content={`About ${profile?.displayName}`} />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? 'Cancel' : 'Edit Profile'}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width='16'>\n          {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const {profileStore} = useStore();\n  const {profile, followings, loadingFollowings, activeTab} = profileStore;\n\n  return (\n      <Tab.Pane loading={loadingFollowings}>\n        <Grid>\n          <Grid.Column width={16}>\n            <Header\n            floated=\"left\"\n            icon='user'\n            content={activeTab === 3 ? `People following ${profile?.displayName}` : `People ${profile?.displayName} is following`} />\n          </Grid.Column>\n          <Grid.Column width={16}>\n            <Card.Group itemsPerRow={4}>\n              {followings.map(profile => (\n                <ProfileCard key={profile.username} profile={profile} />\n              ))}\n            </Card.Group>\n          </Grid.Column>\n        </Grid>\n      </Tab.Pane>\n  )\n})","import React from 'react';\nimport { Cropper } from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props) {\n    return (\n        <Cropper \n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n    setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n    const dzStyles = {\n        border: 'dashed 3px #eee',\n        borderColor: '#eee',\n        borderRadius: '5px',\n        paddingTop: '30px',\n        textAlign: 'center' as 'center',\n        height: 200\n    }\n\n    const dzActive = {\n        borderColor: 'green'\n    }\n\n    const onDrop = useCallback((acceptedFiles: any[]) => {\n        setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n            preview: URL.createObjectURL(file)\n        })))\n    }, [setFiles])\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles} >\n            <input {...getInputProps()} />  \n            <Icon name='upload' size='huge' />\n            <Header content='Drop image here' />\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Button, Grid, Header } from 'semantic-ui-react';\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\n\ninterface Props {\n    loading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props) {\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop() {\n        if (cropper) {\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n        }\n    }, [files])\n\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 1 - Add Photo' />\n                <PhotoWidgetDropzone setFiles={setFiles} />\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 2 - Resize image' />\n                {files && files.length > 0 && (\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n                )}\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\n                {files && files.length > 0 &&\n                    <>\n                        <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\n                        <Button.Group widths={2}>\n                            <Button loading={loading} onClick={onCrop} positive icon='check' />\n                            <Button disabled={loading} onClick={() => setFiles([])} icon='close' />\n                        </Button.Group>\n                    </>}\n\n            </Grid.Column>\n        </Grid>\n    )\n}","import { observer } from 'mobx-react-lite';\nimport React, { SyntheticEvent, useState } from 'react';\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\nimport PhotoUploadWidget from '../../common/imageUpload/PhotoUploadWidget';\nimport { Photo, Profile } from '../../models/profile';\nimport { useStore } from '../../stores/store';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n    const { profileStore: { isCurrentUser, uploadPhoto, \n            uploading, loading, setMainPhoto, deletePhoto } } = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return (\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='image' content='Photos' />\n                    {isCurrentUser && (\n                        <Button floated='right' basic\n                            content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                    {addPhotoMode ? (\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n                    ) : (\n                            <Card.Group itemsPerRow={5}>\n                                {profile.photos?.map(photo => (\n                                    <Card key={photo.id}>\n                                        <Image src={photo.url} />\n                                        {isCurrentUser && (\n                                            <Button.Group fluid widths={2}>\n                                                <Button \n                                                    basic\n                                                    color='green'\n                                                    content='Main'\n                                                    name={'main' + photo.id}\n                                                    disabled={photo.isMain}\n                                                    loading={target === 'main' + photo.id && loading}\n                                                    onClick={e => handleSetMainPhoto(photo, e)}\n                                                />\n                                                <Button \n                                                    basic \n                                                    color='red' \n                                                    icon='trash' \n                                                    loading={target === photo.id && loading}\n                                                    onClick={e => handleDeletePhoto(photo, e)}\n                                                    disabled={photo.isMain}\n                                                    name={photo.id}\n                                                />\n                                            </Button.Group>\n                                        )}\n                                    </Card>\n                                ))}\n                            </Card.Group>\n                        )}\n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { Profile } from '../../models/profile';\nimport { useStore } from '../../stores/store';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileFollowing from './ProfileFollowing';\nimport ProfilePhotos from './ProfilePhotos';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileContent({profile}: Props) {\n    const {profileStore} = useStore();\n\n    const panes = [\n        {menuItem: 'About', render: () => <ProfileAbout />},\n        {menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} />},\n        {menuItem: 'Events', render: () => <Tab.Pane>Events Content</Tab.Pane>},\n        {menuItem: 'Followers', render: () => <ProfileFollowing />},\n        {menuItem: 'Following', render: () => <ProfileFollowing />}\n    ];\n\n    return (\n        <Tab \n            menu={{fluid: true, vertical: true}}\n            menuPosition='right'\n            panes={panes}\n            onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n        />\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React from 'react';\nimport { Button, Divider, Grid, Header, Item, Reveal, Segment, Statistic } from 'semantic-ui-react';\nimport { Profile } from '../../models/profile';\n\ninterface Props {\n    profile: Profile;\n}\n\nexport default observer(function ProfileHeader({profile}: Props) {\n    return (\n        <Segment>\n            <Grid>\n                <Grid.Column width={12}>\n                    <Item.Group>\n                        <Item>\n                            <Item.Image avatar size='small' src={profile.image || '/assets/user.png'} />\n                            <Item.Content verticalAlign='middle'>\n                                <Header as='h1' content={profile.displayName} />\n                            </Item.Content>\n                        </Item>\n                    </Item.Group>\n                </Grid.Column>\n                <Grid.Column width={4}>\n                    <Statistic.Group widths={2}>\n                        <Statistic label='Followers' value={profile.followersCount} />\n                        <Statistic label='Following' value={profile.followingCount} />\n                    </Statistic.Group>\n                    <Divider />\n                    <Reveal animated='move'>\n                        <Reveal.Content visible style={{width: '100%'}}>\n                            <Button fluid color='teal' content='Following'/>\n                        </Reveal.Content>\n                        <Reveal.Content hidden style={{width: '100%'}}>\n                            <Button \n                                fluid \n                                basic\n                                color={true ? 'red' : 'green'} \n                                content={true ? 'Unfollow' : 'Follow'}\n                            />\n                        </Reveal.Content>\n                    </Reveal>\n                </Grid.Column>\n            </Grid>\n        </Segment>\n    )\n})","import { observer } from 'mobx-react-lite';\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid } from 'semantic-ui-react';\nimport LoadingComponent from '../../layout/LoadingComponent';\nimport { useStore } from '../../stores/store';\nimport ProfileContent from './ProfileContent';\nimport ProfileHeader from './ProfileHeader';\n\nexport default observer(function ProfilePage() {\n    const { username } = useParams<{ username: string }>();\n    const { profileStore } = useStore();\n    const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n    useEffect(() => {\n        loadProfile(username);\n        return () => {\n            setActiveTab(0);\n        }\n    }, [loadProfile, username, setActiveTab])\n\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\n\n    return (\n        <Grid>\n            <Grid.Column width={16}>\n                {profile &&\n                    <>\n                        <ProfileHeader profile={profile} />\n                        <ProfileContent profile={profile} />\n                    </>}\n            </Grid.Column>\n        </Grid>\n    )\n})","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({component: Component, ...rest}: Props) {\n  const {userStore: {isLogggedIn}} = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) => isLogggedIn ? <Component {...props} /> : <Redirect to='/' />}\n    />\n  )\n}","import { useLocation } from \"react-router-dom\";\n\nexport default function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\nimport agent from '../../api/agent';\nimport useQuery from '../../common/utils/hooks';\n\nexport default function RegisterSuccess() {\n    const email = useQuery().get('email') as string;\n\n    function handleConfirmEmailResend() {\n        agent.Account.resendEmailConfirm(email).then(() => {\n            toast.success('Verification email resent - please check your email');\n        }).catch(error => console.log(error));\n    }\n\n    return (\n        <Segment placeholder textAlign='center'>\n            <Header icon color='green'>\n                <Icon name='check'/>\n                Successfully registered!\n            </Header>\n            <p>Please check your email (including junk email) for the verification email</p>\n            {email &&\n                <>\n                    <p>Didn't receive the email?  Click the below button to resend</p>\n                    <Button primary onClick={handleConfirmEmailResend} \n                        content='Resend email' size='huge' />\n                </>\n            }\n        </Segment>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport agent from \"../../api/agent\";\nimport useQuery from \"../../common/utils/hooks\";\nimport { useStore } from \"../../stores/store\";\nimport LoginForm from \"./LoginForm\";\n\nexport default function ConfirmEmail() {\n  const {modalStore} = useStore();\n  const email = useQuery().get('email') as string;\n  const token = useQuery().get('token') as string;\n\n  const Status = {\n    Verifying: 'Verifying',\n    Failed: 'Failed',\n    Success: 'Success'\n  }\n\n  const [status, setStatus] = useState(Status.Verifying);\n\n  function handleConfirmEmailResend() {\n    agent.Account.resendEmailConfirm(email).then(() => {\n      toast.success('Verification email resent - please check your email')\n    }).catch(error => console.log(error));\n  }\n\n  useEffect(() => {\n    agent.Account.verifyEmail(token, email).then(() => {\n        setStatus(Status.Success)\n    }).catch(() => {\n        setStatus(Status.Failed)\n    })\n}, [Status.Failed, Status.Success, token, email])\n\nfunction getBody() {\n    switch (status) {\n        case Status.Verifying:\n            return <p>Verifying...</p>;\n        case Status.Failed:\n            return (\n                <div>\n                    <p>Verification failed.  You can try resending the verify link to your email</p>\n                    <Button primary onClick={handleConfirmEmailResend} size='huge' content='Resend email' />\n                </div>\n            );\n        case Status.Success:\n            return (\n                <div>\n                    <p>Email has been verified - you can now login</p>\n                    <Button primary onClick={() => modalStore.openModal(<LoginForm />)} size='huge' />\n                </div>\n            );\n    }\n}\n\nreturn (\n    <Segment placeholder textAlign='center'>\n        <Header icon>\n            <Icon name='envelope' />\n            Email verification\n        </Header>\n        <Segment.Inline>\n            {getBody()}\n        </Segment.Inline>\n    </Segment>\n)\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport HomePage from '../features/home/HomePage';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../features/activities/dashboard/ActivityDashboard';\nimport ActivityForm from '../features/activities/form/ActivityForm';\nimport ActivityDetails from '../features/activities/details/ActivityDetails';\nimport TestErrors from '../features/errors/TestErrors';\nimport NotFound from '../features/errors/NotFound';\nimport ServerError from '../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\nimport RegisterSuccess from '../features/users/RegisterSuccess';\nimport ConfirmEmail from '../features/users/ConfirmEmail';\n\nfunction App() {\n  const location = useLocation();\n  const {commonStore, userStore} = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => commonStore.setAppLoaded());\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n    <ToastContainer position='bottom-right' hideProgressBar />\n    <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route path={'/(.+)'}\n      render={() => (\n        <>\n          <NavBar />\n          <Container style={{marginTop: '7em'}}>\n            <Switch>\n              <PrivateRoute exact path='/activities' component={ActivityDashboard} />\n              <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n              <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n              <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n              <PrivateRoute path='/errors' component={TestErrors} />\n              <Route path='/server-error' component={ServerError} />\n              <Route path='/account/registerSuccess' component={RegisterSuccess} />\n              <Route path='/account/verifyEmail' component={ConfirmEmail} />\n              <Route component={NotFound} />\n            </Switch>\n          </Container>\n        </>\n      )} \n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  \n return null; \n}","import React from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/styles.css';\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport ReactDOM from 'react-dom/client';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport App from './app/layout/App';\nimport ScrollToTop from './app/layout/SrollToTop';\n\nexport const history = createBrowserHistory();\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>\n);\n"],"sourceRoot":""}